#!/bin/sh

#####################################################
# Original Create Brehm Campus Script used in Imagr #
#####################################################

# #First we need to identify the device name for the Wi-Fi interface.

# 	WIFIDEVICE=`networksetup -listallhardwareports | grep --context "Wi-Fi" | grep "Device" | awk '{print $2}'`
#     WIFIINTERFACE=`networksetup -listallhardwareports | grep --context "Wi-Fi" | grep "Hardware Port" | awk '{print $3}'`

# #Once we've identified the current system location and the device name of the WiFi interface, we can go about creating and configuring the new location.

# 	echo "Off Campus location does not exist - Creating new location"
#     /usr/sbin/networksetup -createlocation "Brehm-Campus"

#     echo "Changing to new network location"
#     /usr/sbin/networksetup -switchtolocation "Brehm-Campus"

#     echo "Adding Wi-Fi network interface"
#     /usr/sbin/networksetup -createnetworkservice $WIFIINTERFACE $WIFIDEVICE

#     echo "remembering connected networks"
#     /usr/libexec/airportd $WIFIDEVICE prefs RememberRecentNetworks=YES

#     echo "Allow users to change networks"
#     /usr/libexec/airportd $WIFIDEVICE prefs RequireAdminNetworkChange=YES

#     echo "Allow users to turn off wifi"
#     /usr/libexec/airportd $WIFIDEVICE prefs RequireAdminPowerToggle=YES

#     echo "Require Admin for Ad-Hoc"
#     /usr/libexec/airportd $WIFIDEVICE prefs RequireAdminIBSS=YES

#     /usr/sbin/networksetup -detectnewhardware
#     IFS=$'\n'
#     for i in $(/usr/sbin/networksetup -listallnetworkservices | tail +2 );
#         do
#                 # Turn off auto proxy
#                 /usr/sbin/networksetup -setautoproxyurl "$i" " "
#                 echo "Turned off auto proxy for interface $i"
#                 echo "setting correct DNS Server"
#                 networksetup -setdnsservers "$i" [DNS Server]
#         done
#     unset IFS
#     echo "Auto proxy for all interfaces turned off"

#     echo "Changing to Brehm-Campus location"
#     /usr/sbin/networksetup -switchtolocation "Brehm-Campus"

##############################################################################
# New script to modify an existing location for USB-Serial interface support #
##############################################################################

# First we need to identify if our target location exists.  
# This could function to modify the current active location.
# We want to only target our Brehm Campus location.

# Development Purposes only - List all network locations - This will be removed in the final script.
/usr/sbin/networksetup -listlocations

#Now we need to crosscheck our list to determine if our target of Brehm-Campus exists.
# If -getcurrentlocation not-equals Brehm-Campus
  # then
    # -listlocation (Pipe) string matching for Brehm-Campus
    #/usr/sbin/networksetup -listlocations | grep Brehm-Campus
EXISTINGLOCATION=`/usr/sbin/networksetup -listlocations | grep Brehm-Campus`
TARGETLOCATION="Brehm-Campus"

CURRENTLOCATION=`/usr/sbin/networksetup -getcurrentlocation`


if [ "$EXISTINGLOCATION" == "$TARGETLOCATION" ]; 
    then
        echo "This system has the Brehm-Campus Location"
        # Now that we've ifentified that the needed location already exists, we can add our new USB-Serial interface.
        if ["$CURRENTLOCATION" != "$TARGETLOCATION"]; then
            #If this passes we need to change to the Target Location and the add the interface.
            echo "Location exists, but it is not active.  Changing to Target Location"
            /usr/sbin/networksetup -switchtolocation "$TARGETLOCATION"

            #Now add the new interface to the computer - *** Check for the presence of the USB-Serial Driver install via pgkutil --pkgs




            # NOW we need to identify the device name for the Wi-Fi interface.

            # WIFIDEVICE=`networksetup -listallhardwareports | grep --context "Wi-Fi" | grep "Device" | awk '{print $2}'`
            # WIFIINTERFACE=`networksetup -listallhardwareports | grep --context "Wi-Fi" | grep "Hardware Port" | awk '{print $3}'`
            # echo "Adding Wi-Fi network interface"
            # /usr/sbin/networksetup -createnetworkservice $WIFIINTERFACE $WIFIDEVICE

        elif ["$CURRENTLOCATION" == "$TARGETLOCATION"]; then
            #If this passes then our Target Location is active and we can get to work.
            echo "Out Target Location matches our Current Location - you can create the USB-Serial Interface on Brehm-Campus"

            #Now add the new interface to the computer - *** Check for the presence of the USB-Serial Driver install via pgkutil --pkgs.
            #We also want to confirm that mBlock is installed.

            REQUIREDSERIALPKG="com.wch.usbserial.pkg"
            SERIALPACKAGESEARCH='/usr/sbin/pkgutil --pkgs | grep "$REQUIREDSERIALPKG"'

            REQUIREDAPPLICATION="mBlock"
            # This script will search the computer using system_profiler and then look for any application matching mBlock.
            #mBlock's application name also includes the version number, this search will ignore those characters.
            APPLICATIONSEARCH=`system_profiler SPApplicationsDataType | grep mBlock* | awk '{print $1}' | grep mBlock |  sed -e 's/^\(.\{6\}\).*/\1/'`

             if ["$REQUIREDSERIALPKG" != "$SERIALPACKAGESEARCH"] && ["$REQUIREDAPPLICATION" != "$APPLICATIONSEARCH"]; then
                echo "Required Serial Drive is installed and mBlock is also installed on the target computer"

             # NOW we need to identify the device name for the Wi-Fi interface.   



            

            # WIFIDEVICE=`networksetup -listallhardwareports | grep --context "Wi-Fi" | grep "Device" | awk '{print $2}'`
            # WIFIINTERFACE=`networksetup -listallhardwareports | grep --context "Wi-Fi" | grep "Hardware Port" | awk '{print $3}'`
            # echo "Adding Wi-Fi network interface"
            # /usr/sbin/networksetup -createnetworkservice $WIFIINTERFACE $WIFIDEVICE

            else
                echo "The required USB-Serial drive package has not been installed"
                exit 0 
        fi

    else
        echo "This system does not have the Brehm-Campus Location"
fi

# If the location exists but not active, change to the Brehm Campus Location
#echo "Identifying current network location"
#/usr/sbin/networksetup -getcurrentlocation

#echo "Changing to Brehm-Campus network location"
#/usr/sbin/networksetup -switchtolocation "Brehm-Campus"




########################################################################
# Configure the new USB-Serial Interface for the Brehm-Campus Location #
########################################################################





